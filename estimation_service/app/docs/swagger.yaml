definitions:
  error_handler.ResponseError:
    properties:
      code:
        description: response code
        example: 422
        type: integer
      error:
        description: content
      status:
        description: status of opration success
        example: false
        type: boolean
    type: object
  error_handler.ResponseErrorDetail:
    properties:
      detail:
        description: detail of error
      message:
        description: error message
        example: Server Error
        type: string
    type: object
  error_handler.bodyValidationError:
    properties:
      field:
        description: field name
        example: name
        type: string
      field_value:
        description: value of the field
      message:
        description: message param
        example: The name field is required.
        type: string
      rule:
        description: rule title that denied
        example: min
        type: string
      rule_param:
        description: rule param
        example: "10"
        type: string
    type: object
  error_handler.routeValidationError:
    properties:
      field:
        description: field name
        example: name
        type: string
      message:
        description: message param
        example: The selected item does not exist!
        type: string
      rule:
        description: rule title that denied
        example: required
        type: string
    type: object
  error_handler.serverError:
    properties:
      message:
        description: message param
        example: The selected item does not exist!
        type: string
    type: object
  requests.UserSegmentPair:
    properties:
      segment:
        maxLength: 255
        minLength: 3
        type: string
      user_id:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - segment
    - user_id
    type: object
  responses.ResponseContent:
    properties:
      code:
        description: response code
        example: 422
        type: integer
      data:
        description: content
      status:
        description: status of opration success
        example: false
        type: boolean
    type: object
  responses.ResponseNoContent:
    properties:
      code:
        description: response code
        example: 200
        type: integer
      status:
        description: status of opration success
        example: true
        type: boolean
    type: object
  responses.SegmentUsersCount:
    properties:
      count:
        description: creation time
        type: integer
    type: object
info:
  contact: {}
paths:
  /segments:
    post:
      consumes:
      - application/json
      description: Create new segment pair endpoint
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserSegmentPair'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseNoContent'
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/error_handler.ResponseError'
            - properties:
                error:
                  allOf:
                  - $ref: '#/definitions/error_handler.ResponseErrorDetail'
                  - properties:
                      detail:
                        items:
                          $ref: '#/definitions/error_handler.bodyValidationError'
                        type: array
                    type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/error_handler.ResponseError'
            - properties:
                error:
                  allOf:
                  - $ref: '#/definitions/error_handler.ResponseErrorDetail'
                  - properties:
                      detail:
                        items:
                          $ref: '#/definitions/error_handler.serverError'
                        type: array
                    type: object
              type: object
      summary: Add a new segment pair
      tags:
      - Segment
  /segments/{segment}:
    get:
      consumes:
      - application/json
      description: Show a Segment count by it's name
      parameters:
      - description: segment
        in: path
        name: segment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.ResponseContent'
            - properties:
                data:
                  $ref: '#/definitions/responses.SegmentUsersCount'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/error_handler.ResponseError'
            - properties:
                error:
                  allOf:
                  - $ref: '#/definitions/error_handler.ResponseErrorDetail'
                  - properties:
                      detail:
                        items:
                          $ref: '#/definitions/error_handler.routeValidationError'
                        type: array
                    type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/error_handler.ResponseError'
            - properties:
                error:
                  allOf:
                  - $ref: '#/definitions/error_handler.ResponseErrorDetail'
                  - properties:
                      detail:
                        items:
                          $ref: '#/definitions/error_handler.serverError'
                        type: array
                    type: object
              type: object
      summary: Show a Segment count
      tags:
      - Segment
swagger: "2.0"
