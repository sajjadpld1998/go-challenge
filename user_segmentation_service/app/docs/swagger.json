{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/building": {
            "get": {
                "description": "Get Buildings list ordered by created_at field descending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "List Buildings",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "sajjad",
                        "description": "name that you want search",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "name",
                            "pieces",
                            "likes"
                        ],
                        "type": "string",
                        "example": "created_at",
                        "description": "column that you want to order and sort on it",
                        "name": "order_column",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "type of sort. required if you pass order_column value",
                        "name": "order_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f",
                        "description": "kit id that you want filter",
                        "name": "kit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 2,
                        "description": "list page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 13,
                        "description": "limits of rows count in page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "example": true,
                        "description": "list my Buildings or others. if value is 'true', list all buildings of user (visibility true and false). if value is 'false', just list buildings that visibility value is 'true'",
                        "name": "mine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/repositories.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/building_responses.ListBuildingsResponce"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create new building endpoint",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "Add a new Building",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "home_building",
                        "description": "name of building. it must be unique",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "config of building. it must be json",
                        "name": "config",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "d90ad141-5d82-47fc-92ee-0606f99035c6",
                        "description": "kit_bashe id for building",
                        "name": "kit_bash_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "36000",
                        "description": "pieces count",
                        "name": "pieces",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "images of building",
                        "name": "images[]",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/building_responses.BuildingResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}": {
            "get": {
                "description": "Show a Building by it's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "Show a Building",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/building_responses.BuildingResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Building by it's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "Delete a Building",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}/fee": {
            "get": {
                "description": "Get building fee. you liked or disliked this building.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Get building fee.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/fee_responses.FeeResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a building like or dislike",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Delete a building like or dislike",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}/fee/dislike": {
            "post": {
                "description": "Decrese Like frome Building",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Dislike a building",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}/fee/like": {
            "post": {
                "description": "Add new Like to Building",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Like a building",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}/update": {
            "post": {
                "description": "Update a KitBash by it's name",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "Update a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "home_building",
                        "description": "name of building. it must be unique",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "config of building. it must be json",
                        "name": "config",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "d90ad141-5d82-47fc-92ee-0606f99035c6",
                        "description": "kit_bashe id for building",
                        "name": "kit_bash_id",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "visibility state. its boolean value",
                        "name": "visibility",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "images of building",
                        "name": "images[]",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/building/{id}/update/craft": {
            "post": {
                "description": "Update a KitBash by it's name, change material and property value. this endpoint works just for admins",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Building"
                ],
                "summary": "Update a KitBash craft data by admin",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Building id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "material of building. it must be json",
                        "name": "material",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "property of building. it must be json",
                        "name": "property",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash": {
            "get": {
                "description": "Get KitBashes list ordered by created_at field descending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "List KitBashes",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "list page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limits of rows count in page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "sajjad",
                        "description": "name that you want search",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "name",
                            "pieces",
                            "likes"
                        ],
                        "type": "string",
                        "example": "created_at",
                        "description": "column that you want to order and sort on it",
                        "name": "order_column",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "type of sort. required if you pass order_column value",
                        "name": "order_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/repositories.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/kit_bash_responses.ListKitBashesResponce"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create new KitBash endpoint",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "Add a new KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "wall_kit_bash",
                        "description": "name of kit bash. it must be unique",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file of kit bash",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "config of kit bash. it must be json",
                        "name": "config",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 85,
                        "description": "pices count",
                        "name": "pieces",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "this is description",
                        "description": "description of kit bash.",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "this is style",
                        "description": "style of kit bash. maximum length is 255",
                        "name": "style",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "images of kit bash",
                        "name": "images[]",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/kit_bash_responses.KitBashResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/kit-names": {
            "get": {
                "description": "List all the kit bashes name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "List kit bashes name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/kit_bash_responses.KitBashesIdNameResponce"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ResponseStaticError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}": {
            "get": {
                "description": "Show a KitBash by it's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "Show a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/kit_bash_responses.KitBashResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a KitBash by it's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "Delete a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}/buildings": {
            "get": {
                "description": "Get Buildings list ordered by created_at field descending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "List KitBash Buildings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 2,
                        "description": "list page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 13,
                        "description": "limits of rows count in page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/repositories.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/building_responses.ListBuildingsResponce"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ResponseStaticError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}/fee": {
            "get": {
                "description": "Get KitBash fee. you liked or disliked this KitBash.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Get KitBash fee.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/fee_responses.FeeResponce"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a KitBash like or dislike",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Delete a KitBash like or dislike",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}/fee/dislike": {
            "post": {
                "description": "Decrese Like frome KitBash",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Dislike a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}/fee/like": {
            "post": {
                "description": "Add new Like to KitBash",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fee"
                ],
                "summary": "Like a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/kit-bash/{id}/update": {
            "post": {
                "description": "Update a KitBash by it's name",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KitBash"
                ],
                "summary": "Update a KitBash",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "user wallet",
                        "name": "wallet",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "KitBash Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "wall_kit_bash",
                        "description": "name of kit bash. it must be unique",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file of kit bash",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "{\"key\":\"value\"}",
                        "description": "config of kit bash. it must be json",
                        "name": "config",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 85,
                        "description": "pices count",
                        "name": "pieces",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "this is description",
                        "description": "description of kit bash.",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "this is style",
                        "description": "style of kit bash. maximum length is 255",
                        "name": "style",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "images of kit bash",
                        "name": "images[]",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.unauthorizedError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.forbiddenError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.routeValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.bodyValidationError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/responses.ResponseStaticError"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/error_handler.serverError"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/migrate": {
            "post": {
                "description": "Migrate owner value to wallet id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Migrate"
                ],
                "summary": "Migrate owner value to wallet id",
                "parameters": [
                    {
                        "type": "string",
                        "example": "E577F945E41E70DBDE20172A5E5573EB",
                        "description": "your owner",
                        "name": "owner",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "0xd1aF960E89C2B85D948ea038Fb98789Ed3af2BEd",
                        "description": "your wallet",
                        "name": "wallet",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseNoContent"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ResponseStaticError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.ResponseContent"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/responses.ResponseStaticError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "building_responses.BuildingKitBash": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "kit bash id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "name": {
                    "description": "kit bash name",
                    "type": "string",
                    "example": "sci-fi1"
                }
            }
        },
        "building_responses.BuildingResponce": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "building config, it's json"
                },
                "created_at": {
                    "description": "creation time",
                    "type": "integer"
                },
                "dislike": {
                    "description": "dislike count of building",
                    "type": "integer"
                },
                "disliked": {
                    "description": "if you disliked this building",
                    "type": "boolean"
                },
                "id": {
                    "description": "building id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "images": {
                    "description": "images of building",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://srvs20.landrocker.io/kitbash_building/building/kit9/images/kit9_default_theme.png\"]"
                    ]
                },
                "kit_bash": {
                    "description": "building kit name used in this creation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/building_responses.BuildingKitBash"
                        }
                    ]
                },
                "liked": {
                    "description": "if you liked this building",
                    "type": "boolean"
                },
                "likes": {
                    "description": "likes count of building",
                    "type": "integer"
                },
                "material": {
                    "description": "building material, it's json"
                },
                "name": {
                    "description": "building name",
                    "type": "string",
                    "example": "sci-fi1"
                },
                "pieces": {
                    "description": "pieces count",
                    "type": "integer"
                },
                "property": {
                    "description": "building property, it's json"
                },
                "visibility": {
                    "description": "building visibility",
                    "type": "boolean"
                },
                "wallet": {
                    "description": "owner hash string. it will be delete soon!"
                }
            }
        },
        "building_responses.ListBuildingsResponce": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "creation time",
                    "type": "integer"
                },
                "dislike": {
                    "description": "dislike count of building",
                    "type": "integer"
                },
                "disliked": {
                    "description": "if you disliked this building",
                    "type": "boolean"
                },
                "id": {
                    "description": "building id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "images": {
                    "description": "images of building",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://srvs20.landrocker.io/kitbash_building/building/kit9/images/kit9_default_theme.png\"]"
                    ]
                },
                "kit_bash": {
                    "description": "building kit name used in this creation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/building_responses.BuildingKitBash"
                        }
                    ]
                },
                "liked": {
                    "description": "if you liked this building",
                    "type": "boolean"
                },
                "likes": {
                    "description": "likes count of building",
                    "type": "integer"
                },
                "name": {
                    "description": "building name",
                    "type": "string",
                    "example": "sci-fi1"
                },
                "pieces": {
                    "description": "pieces count",
                    "type": "integer"
                },
                "visibility": {
                    "description": "building visibility",
                    "type": "boolean"
                },
                "wallet": {
                    "description": "owner hash string. it will be delete soon!"
                }
            }
        },
        "error_handler.bodyValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "field name",
                    "type": "string",
                    "example": "name"
                },
                "field_value": {
                    "description": "value of the field"
                },
                "message": {
                    "description": "message param",
                    "type": "string",
                    "example": "The name field is required."
                },
                "rule": {
                    "description": "rule title that denied",
                    "type": "string",
                    "example": "min"
                },
                "rule_param": {
                    "description": "rule param",
                    "type": "string",
                    "example": "10"
                }
            }
        },
        "error_handler.forbiddenError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "message param",
                    "type": "string",
                    "example": "The selected item does not exist!"
                }
            }
        },
        "error_handler.routeValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "field name",
                    "type": "string",
                    "example": "name"
                },
                "message": {
                    "description": "message param",
                    "type": "string",
                    "example": "The selected item does not exist!"
                },
                "rule": {
                    "description": "rule title that denied",
                    "type": "string",
                    "example": "required"
                }
            }
        },
        "error_handler.serverError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "message param",
                    "type": "string",
                    "example": "The selected item does not exist!"
                }
            }
        },
        "error_handler.unauthorizedError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "message param",
                    "type": "string",
                    "example": "The selected item does not exist!"
                }
            }
        },
        "fee_responses.FeeResponce": {
            "type": "object",
            "properties": {
                "fee": {
                    "description": "fee type. value is like, dislike, no. 'no' meanes that you have never fee this building or kitBash",
                    "type": "string",
                    "example": "like"
                }
            }
        },
        "kit_bash_responses.KitBashResponce": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "kit bash config, it's json"
                },
                "created_at": {
                    "description": "creation time",
                    "type": "integer"
                },
                "description": {
                    "description": "kitBash description. it can be null"
                },
                "dislike": {
                    "description": "dislikes count of kit bash",
                    "type": "integer"
                },
                "disliked": {
                    "description": "if you disliked this kit bash",
                    "type": "boolean"
                },
                "file": {
                    "description": "kit bash file path",
                    "type": "string",
                    "example": "https://srvs20.landrocker.io/kitbash_building/kit_bash/kit9/file/kit9.zip"
                },
                "id": {
                    "description": "kit bash id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "images": {
                    "description": "images of kit bash",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://srvs20.landrocker.io/kitbash_building/kit_bash/kit9/images/kit9_default_theme.png\"]"
                    ]
                },
                "liked": {
                    "description": "if you liked this kit bash",
                    "type": "boolean"
                },
                "likes": {
                    "description": "likes count of kit bash",
                    "type": "integer"
                },
                "name": {
                    "description": "kit bash name",
                    "type": "string",
                    "example": "kit_bash_num_2"
                },
                "pieces": {
                    "description": "pieces count",
                    "type": "integer"
                },
                "style": {
                    "description": "kitBash style. it can be null"
                }
            }
        },
        "kit_bash_responses.KitBashesIdNameResponce": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "kit bash id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "name": {
                    "description": "kit bash name",
                    "type": "string",
                    "example": "kit_bash_num_2"
                }
            }
        },
        "kit_bash_responses.ListKitBashesResponce": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "kit bash config, it's json"
                },
                "created_at": {
                    "description": "creation time",
                    "type": "integer"
                },
                "dislike": {
                    "description": "dislikes count of kit bash",
                    "type": "integer"
                },
                "disliked": {
                    "description": "if you disliked this kit bash",
                    "type": "boolean"
                },
                "id": {
                    "description": "kit bash id. it's UUID id and is string",
                    "type": "string",
                    "example": "a4d50e88-1a10-4a8b-af08-3e1060c00d5f"
                },
                "images": {
                    "description": "images of kit bash",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://srvs20.landrocker.io/kitbash_building/kit_bash/kit9/images/kit9_default_theme.png\"]"
                    ]
                },
                "liked": {
                    "description": "if you liked this kit bash",
                    "type": "boolean"
                },
                "likes": {
                    "description": "likes count of kit bash",
                    "type": "integer"
                },
                "name": {
                    "description": "kit bash name",
                    "type": "string",
                    "example": "kit_bash_num_2"
                },
                "pieces": {
                    "description": "pieces count",
                    "type": "integer"
                },
                "style": {
                    "description": "kitBash style. it can be null"
                }
            }
        },
        "repositories.Pagination": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "elements"
                },
                "limit": {
                    "description": "count of elements in per page",
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "description": "current page number",
                    "type": "integer",
                    "example": 3
                },
                "sort": {
                    "description": "sort order by",
                    "type": "string",
                    "example": "created_at desc"
                },
                "total_pages": {
                    "description": "count of total pages",
                    "type": "integer",
                    "example": 12
                },
                "total_rows": {
                    "description": "count of total elements exists",
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "responses.ResponseContent": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "response code",
                    "type": "integer",
                    "example": 422
                },
                "data": {
                    "description": "content"
                },
                "status": {
                    "description": "status of opration success",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "responses.ResponseNoContent": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "response code",
                    "type": "integer",
                    "example": 200
                },
                "status": {
                    "description": "status of opration success",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "responses.ResponseStaticError": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "detail of error"
                },
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Server Error"
                }
            }
        }
    }
}